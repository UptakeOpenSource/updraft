% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/workflow_interface.R
\docType{data}
\name{WorkflowInterface}
\alias{WorkflowInterface}
\title{Workflow Interface}
\format{An object of class \code{R6ClassGenerator} of length 25.}
\usage{
WorkflowInterface
}
\description{
Defines a contract of implementation for any workflow based class, i.e. a class that
             extends this interface. This class cannot be instantiated directly as it is abstract.
}
\section{Contracted Methods}{

\describe{
     \item{\code{addConnections(connections)}}{Adds \code{connections}, a list of implementation instances of \code{ConnectionInterface}, to this workflow.}
     \item{\code{addModules(modules)}}{Adds \code{modules}, a list of implementation instances of \code{ModuleInterface}, to this workflow.}
     \item{\code{getWorkflowInputs()}}{Gets a named logical vector where names are the possible inputs into the workflow and the values indicate if an input is required.}
     \item{\code{getModuleInputs(module)}}{Gets a named logical vector where the names are the inputs, excluding those provided by connections from upstream modules, into a module and the values indicate if an input is required.}
     \item{\code{getConnections(module1, module2)}}{Gets the connections between \code{module1} and \code{module2}.}
     \item{\code{getEndingModules()}}{Gets a list of modules that are the ending modules of a workflow.}
     \item{\code{getAllModules()}}{Gets a list of all modules in a workflow.}
     \item{\code{getStartingModules()}}{Gets a list of modules that are the starting modules of a workflow.}
     \item{\code{getDownstreamModules(module)}}{Gets modules downstream of \code{module} in a workflow.}
     \item{\code{getUpstreamModules(module)}}{Gets modules upstream of \code{module} in a workflow.}
     \item{\code{initFromFile(filename)}}{Initializes this workflow from a save state stored in \code{filename}.}
     \item{\code{removeConnection(connection)}}{Removes \code{connection}, an implementation instance of \code{ConnectionInterface}, to this workflow.}
     \item{\code{removeModule(module)}}{Adds \code{module}, an implementation instance of \code{ModuleInterface}, to this workflow.}
     \item{\code{save(filename)}}{Saves the state of this workflow into a file named \code{filename} so that future workflows can be initialized to this workflow.}
     \item{\code{visualize()}}{Visualizes this workflow.}
     \item{\code{getWorkflowExecutionInfo()}}{Returns a list with the following fields:}{
                 \itemize{
                          \item{\code{module} or \code{workflow} - Indicating the module / workflow name.}
                          \item{\code{startTime} - Indicating the module exuecution start time.}
                          \item{\code{endTime} - Indicating the module exuecution end times.}
                          }
                 }
}
}

\keyword{datasets}
