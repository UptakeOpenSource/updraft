% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/module_custom_function.R
\docType{data}
\name{CustomFunctionModule}
\alias{CustomFunctionModule}
\title{Custom Function Module}
\format{An object of class \code{R6ClassGenerator} of length 25.}
\usage{
CustomFunctionModule
}
\description{
Implementation of \code{ModuleInterface} for executing a user
  defined function. Uses \code{future} package for execution.
}
\section{Class Constructor}{
 \describe{ \item{\code{new(name, fun)}}{
  \itemize{ \item{\code{name}: Unique character string that identifies this
  module instance.} \item{\code{fun}: function this module will execute. Must
  be a reference to the actual function.} } } }
}

\section{Public}{
 \describe{ 
  \item{\code{clearOutputCache()}}{ \itemize{
  \item{Clears output cache stored in this instance so memory can be
  reclaimed.} \item{\bold{Returns}: \code{NULL}.} } }

  \item{\code{errorCheck(executionCheck = FALSE, ...)}}{ \itemize{ \item{Runs
  error checking on the internal state of this object for erroneous values.}
  \item{\code{executionCheck}: when set to \code{TRUE}, runs additional
  checks to determine if ready for execution.} \item{\code{...}: not used by
  this component.} \item{\bold{Returns}: \code{NULL}, will raise a fatal
  error if an error is found.} } }

  \item{\code{getFuncObj()}}{ \itemize{ \item{Gets the base R function object
  that is called when a module's execution is started.} \item{\bold{Returns}:
  R function object.} } }

  \item{\code{getInputs()}}{ \itemize{ \item{Gets a named logical vector
  where the names are the possible inputs into a module and the values
  indicate if an input is required.} \item{\bold{Returns}: logical vector.} }
  }

  \item{\code{getName()}}{ \itemize{ \item{Gets the name of this function.}
  \item{\bold{Returns}: character string that is the name of this module.} }
  }

  \item{\code{getOutput()}}{ \itemize{ \item{Gets the output of the function
  executed by this module.} \item{\bold{Returns}: The output of the function
  if the execution has completed. \code{NULL} will be returned if the
  execution has not been started or is still in progress.} } }

  \item{\code{getSaveInfo()}}{ \itemize{ \item{Gets a named list of internal
  states of this object which can be used to save this object on disk.}
  \item{\bold{Returns}: a named list} } }

  \item{\code{hasCompleted()}}{ \itemize{ \item{Indicates if the execution of
  the associated function of this module is complete.} \item{\bold{Returns}:
  a boolean where \code{TRUE} indicates the execution is complete and
  \code{FALSE} indicates the execution is not complete or not started.} } }

  \item{\code{startExecution(args)}}{ \itemize{ \item{Starts the execution of
  the function associated with this module. This is non-blocking if using an
  asynchronous.} \item{\bold{\code{args}}: named list of arguments for
  function associated with this module} \item{\bold{Returns}: \code{NULL}} }
  } }
}

\section{Private}{
 \describe{ \item{\code{fun}}{ \itemize{ \item{Stores
  associated function name.} } }

  \item{\code{futurePromise}}{ \itemize{ \item{Stores promise of future
  output of a function.} } } }
}

\section{Static Class Methods}{
 \describe{
  \item{\link[updraft]{CustomFunctionModule-cash-initFromSaveData}}{} }
}

\keyword{datasets}
